[tox]
envlist =
    py{310,311,312}-test{,-alldeps,-devdeps,-oldestdeps,-devinfra}{,-cov}
    py{310,311,312}-test-numpy{123,124,125,126}
    build_docs
    linkcheck
    codestyle
    pep517
    bandit
isolated_build = true
indexserver =
    NRAO = https://casa-pip.nrao.edu/repository/pypi-group/simple

[testenv]
# Suppress display of matplotlib plots generated during docs build
setenv =
    MPLBACKEND=agg
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/scientific-python-nightly-wheels/simple https://pypi.anaconda.org/liberfa/simple https://pypi.anaconda.org/astropy/simple

# Pass through the following environment variables which may be needed
# for the CI
passenv = HOME,WINDIR,LC_ALL,LC_CTYPE,CC,CI

# Run the tests in a temporary directory to make sure that we don't
# import this package from the source tree
changedir = .tmp/{envname}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g., test-devdeps-cov. Lines below starting
# with factor: will only take effect if that factor is included in the
# environment name. To see a list of example environments that can be run,
# along with a description, run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    devinfra: like devdeps but also dev version of infrastructure
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage
    numpy123: with numpy 1.23.*
    numpy124: with numpy 1.24.*
    numpy125: with numpy 1.25.*
    numpy126: with numpy 1.26.*
    casa: with casatools and casatasks

# The following provides some specific pinnings for key packages
deps =
    cov: pytest-cov

    numpy123: numpy==1.23.*
    numpy124: numpy==1.24.*
    numpy125: numpy==1.25.*
    numpy126: numpy==1.26.*

    casa: :NRAO:casatools
    casa: :NRAO:casatasks

    oldestdeps: numpy==1.23
    oldestdeps: astropy==5.1
    oldestdeps: matplotlib==3.5
    oldestdeps: pytest-astropy==0.11

    devdeps: numpy>=0.0.dev0
    devdeps: matplotlib>=0.0.dev0
    devdeps: pyerfa>=0.0.dev0
    devdeps: astropy>=0.0.dev0

    # Latest developer version of infrastructure packages.
    devinfra: git+https://github.com/pytest-dev/pytest.git
    devinfra: git+https://github.com/astropy/extension-helpers.git
    devinfra: git+https://github.com/astropy/pytest-doctestplus.git
    devinfra: git+https://github.com/astropy/pytest-remotedata.git
    devinfra: git+https://github.com/astropy/pytest-astropy-header.git
    devinfra: git+https://github.com/astropy/pytest-arraydiff.git
    devinfra: git+https://github.com/astropy/pytest-filter-subpackage.git
    devinfra: git+https://github.com/astropy/pytest-astropy.git

# The following indicates which [project.optional-dependencies] from
# pyproject.toml will be installed
extras =
    test: test
    alldeps: all
    build_docs: docs

install_command =
    !devdeps: python -I -m pip install
    devdeps: python -I -m pip install -v --pre

commands =
    # Force numpy-dev after matplotlib downgrades it
    # (https://github.com/matplotlib/matplotlib/issues/26847)
    devdeps: python -m pip install --pre --upgrade --extra-index-url https://pypi.anaconda.org/scientific-python-nightly-wheels/simple numpy
    pip freeze
    pytest --pyargs regions {toxinidir}/docs \
    cov: --cov regions --cov-config={toxinidir}/pyproject.toml --cov-report xml:{toxinidir}/coverage.xml \
    {posargs}

[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b html . _build/html

[testenv:linkcheck]
changedir = docs
description = check the links in the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b linkcheck . _build/html

[testenv:codestyle]
skip_install = true
changedir = .
description = check code style with flake8
deps = flake8
commands = flake8 regions --count --max-line-length=100

[testenv:pep517]
skip_install = true
changedir = .
description = PEP 517
deps =
    build
    twine
commands =
    python -m build --sdist .
    twine check dist/* --strict

[testenv:bandit]
skip_install = true
changedir = .
description = security check with bandit
deps = bandit
commands = bandit -r regions -c pyproject.toml
