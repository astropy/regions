name: CI Tests

on:
  push:
  pull_request:
  schedule:
    # run every Monday at 6am UTC
    - cron: '0 6 * * 1'

env:
  TOXARGS: '-v'

jobs:
  ci-tests:
    name: ${{ matrix.os }}, ${{ matrix.tox_env }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python: '3.8'
            tox_env: 'py38-test-alldeps'
            toxposargs: --remote-data=any
          - os: ubuntu-latest
            python: '3.9'
            tox_env: 'py39-test-alldeps-cov'
          - os: macos-latest
            python: '3.9'
            tox_env: 'py39-test-alldeps'
          - os: windows-latest
            python: '3.9'
            tox_env: 'py39-test-alldeps'
          - os: ubuntu-latest
            python: '3.10'
            tox_env: 'py310-test-alldeps'
          - os: ubuntu-latest
            python: '3.9'
            tox_env: 'py39-test'
          - os: ubuntu-latest
            python: '3.9'
            tox_env: 'codestyle'
          - os: ubuntu-latest
            python: '3.9'
            tox_env: 'bandit'
          - os: ubuntu-latest
            python: '3.8'
            tox_env: 'py38-test-alldeps-astropylts-numpy118'

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Print Python, pip, setuptools, and tox versions
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import pip; print(f'pip {pip.__version__}')"
        python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
        python -c "import tox; print(f'tox {tox.__version__}')"
    - name: Run tests
      run: tox -e ${{ matrix.tox_env }} -- ${{ matrix.toxposargs }}
    - name: Upload coverage to codecov
      if: "contains(matrix.tox_env, '-cov')"
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml


  allowed_failures:
    name: (Allowed Failure) ${{ matrix.os }}, ${{ matrix.tox_env }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            python: '3.9'
            tox_env: 'py39-test-alldeps-devdeps'
          - os: windows-latest
            python: '3.9'
            tox_env: 'py39-test-alldeps-devdeps'

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install base dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Print Python, pip, setuptools, and tox versions
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import pip; print(f'pip {pip.__version__}')"
        python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
        python -c "import tox; print(f'tox {tox.__version__}')"
    - name: Run tests
      run: tox -e ${{ matrix.tox_env }} -- ${{ matrix.toxposargs }}
    - name: Upload coverage to codecov
      if: "contains(matrix.tox_env, '-cov')"
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
